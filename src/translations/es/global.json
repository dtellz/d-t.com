{
    "landing": {
        "title": "Soy Diego Téllez, Full Stack Engineer",
        "company": "@Stuart",
        "projects": "Mira algunos de mis",
        "github": "mejores proyectos",
        "profile": "Visita mi",
        "download": "Descarga mi"
    },
    "header": {
        "title": "BIENVENID@",
        "btn": "Navega"
    },
    "menu": {
        "home": "Inicio",
        "about": "Sobre mi",
        "projects": "Proyectos en vivo"
    },
    "about": {
        "title": "Ingeniería y Desarrollo de Software",
        "intro": "Hola, mi nombre es Diego Tellez y soy un programador apasionado con experiencia que se remonta a principios de los años 2000. Mi trayectoria en la programación comenzó con la programación funcional y de sistemas usando C, seguido por una inmersión profunda en la programación orientada a objetos con Java. Mi entusiasmo por aprender va más allá de la tecnología: también soy un piloto capacitado para barcos mercantes y he servido como segundo al mando en un buque portacontenedores de 150m de largo, también me encanta el surf y el bodyboard; me considero un hombre de agua. Mis habilidades de desarrollo de software abarcan una amplia gama de lenguajes de programación, incluyendo C, Java, Python, PHP, Swift, Groovy, Bash, JavaScript y TypeScript. Soy competente en la construcción de servicios de backend y frontend y microservicios utilizando frameworks como NodeJS, Express, Deno, NestJS, Flask, Django, FastAPI, ReactJs y AngularJs. Mi experiencia incluye escribir pruebas unitarias e integradas con PyTest, UnitTest, Jest, Mocha, Crypress, Cucumber, construyendo pipelines de CI/CD usando Jenkins y GithubActions, lo que me hizo competente en scripting con Groovy y Bash. Tengo una experiencia profesional considerable con los Servicios de AWS, particularmente ElasticBeanstalk, EC2, X-ray, Cloudwatch, SystemsManager, Lambda, RDS, VPC, Auto-scaling, SNS, IAM, CloudFormation, CloudFront y S3. Además, he trabajado con contenerización usando Docker, orquestación con Kubernetes y plataformas de transmisión de eventos distribuidos como Kafka. Recientemente, me he adentrado en el Aprendizaje Automático y, adquiriendo competencia en Tensorflow y PyTorch, y me especialicé en TinyML a través de un programa de Certificado Profesional de la Universidad de Harvard. Actualmente practico el desarrollo de juegos con monogame utilizando .NET y C# como tecnología principal.",
        "content": "He ingresado a la industria de TI como Desarrollador de Software y he progresado a través de varios roles incluyendo Desarrollador de Front End, Desarrollador de Back End, Arquitecto de Soluciones Junior y recientemente como Ingeniero Full Stack. Mi trabajo implica interactuar con sistemas distribuidos complejos.",
        "achievements": "Mis logros más notables como profesional de la Ingeniería de Software incluyen:",
        "ach1": "Ser premiado con el Mejor Proyecto de la promoción en la Escuela Neoland. Puedes ver la presentación en YouTube en español",
        "prelink": " aquí.",
        "postlink": " Este logro condujo a un contrato como Profesor de Apoyo en la Escuela de Programación donde estudié y un otro contrato Freelance como Desarrollador Full Stack colaborando en el desarrollo de una aplicación móvil de gestión de invernaderos inteligentes y un sistema IoT, sentando las bases para mis éxitos posteriores.",
        "ach2": "Diseñar y desarrollar un pipeline de Integración Continua en Jenkins que permitió a los equipos de Operaciones Comerciales de Stuart a probar sus scripts de Python antes del despliegue en producción.",
        "ach3": "Liderar el proyecto 'The Database CleanUp', que identificó que aproximadamente el 25% de las Aplicaciones en un monorepo de NodeJs&React WebApps se les asignó por defecto una Base de Datos RDS AWS t2.medium. Encabecé la refactorización del pipeline de despliegue y el proceso para eliminar bases de datos innecesarias en 15 aplicaciones web en AWS, resultando en cero tiempo de inactividad, sin impacto en los clientes y una reducción significativa de aproximadamente $50,000/año en gastos de AWS.",
        "ach4": "Dirigir el Proyecto de Automatización de Grafana, donde desarrollé un script para generar paneles de Grafana para nuevas aplicaciones desplegadas con la pila NodeJs. Este script gestionó eficientemente los paneles de las aplicaciones existentes, clonando sus paneles/filas de métricas comerciales. El éxito de este proyecto condujo al desarrollo de un sistema automático de gestión de paneles basado en plantillas, permitiendo actualizaciones en todas las aplicaciones de la empresa con cambios en un panel modelado en JSON templado.",
        "ach5": "Desarrollador principal de la implementación del monorepo nodejs-packages, que involucró la extracción de una carpeta de 'paquetes' compartida de un monorepo de más de 60 servicios. Este nuevo monorepo apuntó a la independización de cada uno de los paquetes para ser publicados como un paquete npm independiente, la creación de un pipeline de CI y otro de CD para publicarlos en un repositorio npm interno en Nexus con características interesantes como una función de auto-revert de commits para evitar que el código no publicado permanezca en la rama principal en caso de errores de publicación y abrir un nuevo PR con los cambios revertidos para permitir al desarrollador depurar, corregir y volver a publicar sus actualizaciones."
    }    
}
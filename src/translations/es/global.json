{
    "landing": {
        "title": "Soy Diego Téllez, Full Stack Engineer",
        "company": "@Stuart",
        "projects": "Mira algunos de mis",
        "github": "mejores proyectos",
        "profile": "Visita mi",
        "download": "Descarga mi"
    },
    "header": {
        "title": "BIENVENID@",
        "btn": "Navega"
    },
    "menu": {
        "home": "Inicio",
        "about": "Sobre mi",
        "projects": "Proyectos en vivo"
    },
    "about": {
        "title": "Ingeniería y desarrollo de software.",
        "intro": "Hola soy Diego Tellez, soy programador y llevo escribiendo software desde principios de los 2000. Mi primera experiencia con lenguajes de programación fue aprendiendo programación funcional y de sistemas con C y programación orientada a objetos con Java. Desde muy joven he sido bueno aprendiendo y me gusta desarrollar y practicar nuevas habilidades constantemente (incluso he sido capaz de aprender a pilotar buques mercantes y he servido como segundo al mando de un buque portacontenedores de 150m de eslora en la marina mercante). He escrito software en varios lenguajes de programación como C, Java, Python, PHP, Swift, Groovy, Bash, JavaScript y TypeScript. Tengo experiencia construyendo microservicios backend y frontend con frameworks como NodeJS, Express, Deno, NestJS, Flask, Django, ReactJs y AngularJs. Tengo experiencia escribiendo pruebas unitarias y de integración con PyTest, UnitTest, Jest, Mocha, Crypress, Cucumber. He construido pipelines de CI/CD con Jenkins y soy proficiente con Groovy y Bash. Tengo experiencia profesional con los servicios de AWS, especialmente ElasticBeanstalk, EC2, X-ray, Cloudwatch, SystemsManager, Lambda, RDS, VPC, Auto-scaling, SNS, IAM, CloudFormation, CloudFront y S3. Tengo experiencia con containerización de aplicaciones con Docker y orquestación con Kubernetes. También he trabajado con plataformas de streaming de eventos distribuidos como Kafka. Recientemente he empezado a estudiar Machine Learning y soy proficente con Tensorflow y pyTorch y me estoy especializando obteniendo un Certificado Profesional en la Universidad de Harvard en el campo de 'Tiny Machine Learning' aprendiendo a desplegar aplicaciones de Machine Learning en sistemas embedidos.",
        "content": "Me he unido recientemente a la industria del software como Desarrollador y he trabajado como Front End Engineer, Back End Engineer, Arquitecto de Soluciones y más recientemente como Full Stack Engineer.",
        "achievements": "Mis logros mas notables como ingeniero de software son:",
        "ach1": "Premio al 'mejor proyecto' de la promoción en Neoland School; puedes ver la presentación del proyecto",
        "prelink": " aqui.",
        "postlink": " Esto garantizó mi rol como Support Teacher en la escuela de programación y un contrato como Freelance FullStack Developer; además fue la semilla de mis éxitos futuros.",
        "ach2": "Principal diseñador y desarrollador de un pipeline de Integración Continua en Jenkins para permitir a los equipos de Operaciones de Negocio probar sus scripts en Python antes de llegar a producción.",
        "ach3": "Líder del proyecto 'The Database CleanUp'; me llamó la atención que alrededor del 25% de las aplicaciones de un monorepo de aplicaciones web del stack NodeJs&React tenían una base de datos en AWS RDS tipo t2.medium  creada por defecto en el pipeline de CD al crear una nueva app. Sugerí refactorizar el pipeline para que la base de datos se creara opcionalmente y comencé el proceso para eliminar la base de datos de 15 aplicaciones web desplegadas en AWS con entornos sandbox, beta y de producción. El proyecto fue un éxito, sin downtime ni impacto para los clientes y con una reducción de alrededor de 50.000 dólares al año en nuestra factura de AWS.",
        "ach4": "Líder del Proyecto de Automatización de Grafana; Construí un script que generaría un dashboard Grafana para todas las nuevas aplicaciones desplegadas en la empresa. Este script debería manejar los dashboards de aplicaciones existentes y clonar sus paneles de métricas de negocio ya existentes. El proyecto fue un éxito y allanó el camino para un sistema de gestión de dashboards automatizado basado en plantillas que permite actualizar todos los dashboards de las aplicaciones de la empresa cambiando el modelo JSON de un template."
    },
    "project": {
        "production": "Ver proyecto",
        "source": "Codigo fuente"
    }
}